// 偏移模型
@each $typeKey, $type in $space-types {
  @each $sizeKey, $size in $space-sizes {
    // mt10 margin-top:10px
    @each $directionKey, $direction in $space-directions {
      .#{$typeKey}#{$directionKey}#{""+$sizeKey} {
        #{$type}-#{$direction}: $size* $unit;
      }
    }

    // mx10 margin: 10px 0;
    .#{$typeKey}x#{""+$sizeKey} {
      #{$type}-left: $size* $unit;
      #{$type}-right: $size* $unit;
    }

    // my10 margin: 0 10px;
    .#{$typeKey}y#{""+$sizeKey} {
      #{$type}-top: $size* $unit;
      #{$type}-bottom: $size* $unit;
    }

    // ma10 margin: 10px ;
    .#{$typeKey}a#{""+$sizeKey} {
      #{$type}: $size* $unit;
    }
  }
}

// 颜色模型
@each $typeKey, $type in $color-types {
  // c-red  color:red;
  // bc-red background-color: red;
  @each $sizeKey, $size in $color-sizes {
    .#{$typeKey}-#{""+$sizeKey} {
      #{$type}: $size;
    }

    // bc-red-1 background-color: rgba(red,.1);
    @for $i from 1 to 11 {
      .#{$typeKey}-#{""+$sizeKey}-#{$i} {
        #{$type}: rgba($size, $i/10);
      }
    }
  }
}

// 边框模型

@each $typeKey, $type in $border-types {
  @each $sizeKey, $size in $color-sizes {
    @for $i from 1 to 2 {
      // bs-1-red border:1px solid red
      .b#{$typeKey}-#{$i}-#{""+$sizeKey} {
        border: $i * $unit $type $size;
      }

      // bs-t-1-red border-top:1px solid red
      @each $directionKey, $direction in $space-directions {
        .b#{$typeKey}-#{$directionKey}-#{$i}-#{""+$sizeKey} {
          border-#{$direction}: $i * $unit $type $size;
        }
      }
    }
  }
}

// // 字体模型
// f12 font-size:12px;
@for $i from $font-size-start to $font-size-end {
  .f#{$i} {
    font-size: $i * $unit;
  }
}

//文本溢出省略
// more-t3
@for $i from 1 to 5 {
  .more-t#{$i} {
    @if $i <=1 {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    @else {
      display: box;
      -webkit-line-clamp: $i;
      min-width: 0;
      overflow: hidden;
      text-overflow: ellipsis;
      transition: all linear 0.2s;
    }
  }
}

// flex
// x-jsb-as: display: flex;flex-direction:row;justify-content:space-between;align-items:flex-start;
@each $direction-key,$direction in $flex-direction {
  @each $justify-key,$justify in $flex-justify {
    @each $align-key,$align in $flex-align {
      .#{$direction-key}-j#{$justify-key}-a#{$align-key} {
        align-items: $align;
        display: flex;
        flex-direction: $direction;
        justify-content: $justify;
      }
    }
  }
}
